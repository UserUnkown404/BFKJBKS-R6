	game.StarterGui:SetCore("SendNotification", {
		Title = "Ragdoll"; -- the notification after waiting any second like wait(1)
		Text = "Made by (MOJANGcreator091)"; 
		Duration = 10;
	})

wait()
	game.StarterGui:SetCore("SendNotification", {
		Title = "Ragdoll"; -- the notification after waiting any second like wait(1)
		Text = "Press 'R' to Ragdoll and 'T' to Get up"; 
		Duration = 5;
	})

wait()

local userInputService = game:GetService("UserInputService")

userInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent then return end
    if input.UserInputType == Enum.UserInputType.Keyboard then
        if input.KeyCode == Enum.KeyCode.R then
           game.Players.LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping, false)
           game.Players.LocalPlayer.Character.Torso["Right Hip"].Parent = game.ReplicatedStorage
           game.Players.LocalPlayer.Character.Torso["Left Hip"].Parent = game.ReplicatedStorage
           game.Players.LocalPlayer.Character.Torso["Left Shoulder"].Parent = game.ReplicatedStorage
           game.Players.LocalPlayer.Character.Torso["Right Shoulder"].Parent = game.ReplicatedStorage
           wait()
           game.Players.LocalPlayer.Character.Humanoid.Sit = true
           wait()
           game.Players.LocalPlayer.Character["Left Arm"].Part.CanCollide = true
           wait()
           game.Players.LocalPlayer.Character["Right Arm"].Part.CanCollide = true
           wait()
           game.Players.LocalPlayer.Character["Left Leg"].Part.CanCollide = true
           wait()
           game.Players.LocalPlayer.Character["Right Leg"].Part.CanCollide = true
        end
        end
        end)

userInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if gameProcessedEvent then return end
    if input.UserInputType == Enum.UserInputType.Keyboard then
        if input.KeyCode == Enum.KeyCode.T then
           game.ReplicatedStorage["Right Hip"].Parent = game.Players.LocalPlayer.Character.Torso
           game.ReplicatedStorage["Left Hip"].Parent = game.Players.LocalPlayer.Character.Torso
           game.ReplicatedStorage["Left Shoulder"].Parent = game.Players.LocalPlayer.Character.Torso
           game.ReplicatedStorage["Right Shoulder"].Parent = game.Players.LocalPlayer.Character.Torso
           game.Players.LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping, true)
           wait()
           game.Players.LocalPlayer.Character.Humanoid.Sit = false
           wait()
           game.Players.LocalPlayer.Character["Left Arm"].Part.CanCollide = false
           wait()
           game.Players.LocalPlayer.Character["Right Arm"].Part.CanCollide = false
           wait()
           game.Players.LocalPlayer.Character["Left Leg"].Part.CanCollide = false
           wait()
           game.Players.LocalPlayer.Character["Right Leg"].Part.CanCollide = false
        end
        end
end)


local part = Instance.new("Part", game.Players.LocalPlayer.Character)
part.Transparency = 1
part.Size = Vector3.new(1, 1, 1)
part.CanCollide = true
local w1 = Instance.new("Weld", part)
w1.Part0 = game.Players.LocalPlayer.Character["Left Arm"]
w1.Part1 = part
w1.C1 = CFrame.new(0,0,0)
wait(0.1)
game.Players.LocalPlayer.Character.Part.Parent = game.Players.LocalPlayer.Character["Left Arm"]
wait()
local part = Instance.new("Part", game.Players.LocalPlayer.Character)
part.Transparency = 1
part.Size = Vector3.new(1, 1, 1)
part.CanCollide = true
local w1 = Instance.new("Weld", part)
w1.Part0 = game.Players.LocalPlayer.Character["Right Arm"]
w1.Part1 = part
w1.C1 = CFrame.new(0,0,0)
wait(0.1)
game.Players.LocalPlayer.Character.Part.Parent = game.Players.LocalPlayer.Character["Right Arm"]
wait()
local part = Instance.new("Part", game.Players.LocalPlayer.Character)
part.Transparency = 1
part.Size = Vector3.new(1, 1, 1)
part.CanCollide = true
local w1 = Instance.new("Weld", part)
w1.Part0 = game.Players.LocalPlayer.Character["Left Leg"]
w1.Part1 = part
w1.C1 = CFrame.new(0,0,0)
wait(0.1)
game.Players.LocalPlayer.Character.Part.Parent = game.Players.LocalPlayer.Character["Left Leg"]
wait()
local part = Instance.new("Part", game.Players.LocalPlayer.Character)
part.Transparency = 1
part.Size = Vector3.new(1, 1, 1)
part.CanCollide = true
local w1 = Instance.new("Weld", part)
w1.Part0 = game.Players.LocalPlayer.Character["Right Leg"]
w1.Part1 = part
w1.C1 = CFrame.new(0,0,0)
wait(0.1)
game.Players.LocalPlayer.Character.Part.Parent = game.Players.LocalPlayer.Character["Right Leg"]

game:GetService("UserInputService").InputBegan:connect(onKeyPress)
LocalPlayer = game:GetService("Players").LocalPlayer
function Iterate(instance, func)
for i, v in next, instance:GetChildren() do
func(v)
end
end
limbs = {
["Right Leg"] = true;
["Right Arm"] = true;
["Left Leg"] = true;
["Left Arm"] = true;
}
Iterate(LocalPlayer.Character, function(v)
if v:IsA("BasePart") then
local attachment = Instance.new("Attachment")
attachment.Parent = v
attachment.Name = (v.Name .. "[Attachment]")
if limbs[v.Name] then
attachment.Position = Vector3.new(0, v.Size.Y/2, 0)
elseif v.Name == "Head" then
attachment.Position = Vector3.new(0, -v.Size.Y/2, 0)
attachment.Rotation = Vector3.new(0, 0, -90)
end
end
end)
local leftLegAttachment = Instance.new("Attachment")
leftLegAttachment.Position = Vector3.new(-.5, -1, 0)
leftLegAttachment.Rotation = Vector3.new(0, -90, 0)
local rightLegAttachment = Instance.new("Attachment")
rightLegAttachment.Position = Vector3.new(.5, -1, 0)
rightLegAttachment.Rotation = Vector3.new(0, -90, 0)
rightLegAttachment.Parent, leftLegAttachment.Parent = LocalPlayer.Character.Torso, LocalPlayer.Character.Torso
jointAttachments = {
['Head'] = {
['Attachment0'] = LocalPlayer.Character.Torso['NeckAttachment'];
['Attachment1'] = LocalPlayer.Character.Head['Head[Attachment]'];
};
['Left Arm'] = {
['Attachment0'] = LocalPlayer.Character.Torso['LeftCollarAttachment'];
['Attachment1'] = LocalPlayer.Character['Left Arm']['Left Arm[Attachment]'];
};
['Right Arm'] = {
['Attachment0'] = LocalPlayer.Character.Torso['RightCollarAttachment'];
['Attachment1'] = LocalPlayer.Character['Right Arm']['Right Arm[Attachment]'];
};
['Left Leg'] = {
['Attachment0'] = leftLegAttachment;
['Attachment1'] = LocalPlayer.Character['Left Leg']['Left Leg[Attachment]'];
};
['Right Leg'] = {
['Attachment0'] = rightLegAttachment;
['Attachment1'] = LocalPlayer.Character['Right Leg']['Right Leg[Attachment]'];
};
}
LocalPlayer.Character.Humanoid.PlatformStand = true
Iterate(LocalPlayer.Character, function(v)
if v:IsA("BasePart") then
if jointAttachments[v.Name] then
local ballSocketJoint = Instance.new("BallSocketConstraint")
ballSocketJoint.Parent = v
ballSocketJoint.Radius = 0.15
ballSocketJoint.Attachment0, ballSocketJoint.Attachment1 = jointAttachments[v.Name]['Attachment0'], jointAttachments[v.Name]['Attachment1']
end
end
end)
